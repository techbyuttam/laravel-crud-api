{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel CRUD API",
        "description": "This is a simple CRUD API built with Laravel.  \r\n *      Provides user management features like create, read, update, and delete operations.  \r\n *      Uses standard response formats for consistency.  \r\n *      Note: All data will be reset every 7 days.  \r\n *      Authentication is not required for testing.",
        "contact": {
            "name": "API Support",
            "email": "ubhut@techbyuttam.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api-crud.techbyuttam.com/api",
            "description": "Testing Server"
        }
    ],
    "paths": {
        "/logs/{date}": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Retrieve logs by date",
                "description": "Fetches the log file for the specified date and returns its contents.",
                "operationId": "getLogsByDate",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date of the log file to retrieve (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Log"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Log file not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Log file not found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Log file not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error fetching logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error fetching logs"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/clear": {
            "delete": {
                "tags": [
                    "Logs"
                ],
                "summary": "Clear all log files",
                "description": "Deletes all log files from the storage/logs directory.",
                "operationId": "78e830a7ecc97fd85d6164475f8ff16a",
                "responses": {
                    "200": {
                        "description": "All logs cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All logs cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error clearing all logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Error clearing all logs"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        },
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logs/clear/{date}": {
            "delete": {
                "tags": [
                    "Logs"
                ],
                "summary": "Clear logs by date",
                "description": "Deletes log files that contain the specified date in their filename.",
                "operationId": "clearLogsByDate",
                "parameters": [
                    {
                        "name": "date",
                        "in": "path",
                        "description": "Date to filter log files by",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-10-01"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logs for the specified date cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logs for 2023-10-01 cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No logs found for the specified date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No logs found for 2023-10-01"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error clearing log by date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error clearing log by date"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system/optimize-clear": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Optimize and clear application cache",
                "description": "This endpoint optimizes the application and clears the cache.",
                "operationId": "2a9ab7376b17299b6badf261af82e904",
                "responses": {
                    "200": {
                        "description": "Application optimized and cache cleared",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Application optimized and cache cleared"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to clear cache",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to clear cache"
                                        },
                                        "error_code": {
                                            "type": "string",
                                            "example": "SERVER_ERROR"
                                        },
                                        "error_details": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "bb2caab318eadb3d78d950ddf09d4958",
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve users"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DATABASE_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "0436999fd93eb93ba51d3994587e3f55",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_NOT_FOUND"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve user"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DATABASE_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "operationId": "ddfe232db1870b82493bf8bd25596d37",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_NOT_FOUND"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update user"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DATABASE_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "756b5942311f9c8634257ecb7a9212bd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "USER_NOT_FOUND"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete user"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DATABASE_ERROR"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Detailed error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/add": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add a new user",
                "operationId": "6df5703f1e7679d0d16e0d6018f137a9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "VALIDATION_ERROR"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create user"
                                        },
                                        "code": {
                                            "type": "string",
                                            "example": "DATABASE_ERROR"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Log": {
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "level": {
                        "type": "string",
                        "example": "ERROR"
                    },
                    "api": {
                        "type": "string",
                        "example": "http://example.com/api/logs"
                    },
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "controller": {
                        "type": "string",
                        "example": "LogController"
                    },
                    "function": {
                        "type": "string",
                        "example": "getLogsByDate"
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "file": {
                        "type": "string",
                        "example": "/path/to/file.php"
                    },
                    "line": {
                        "type": "integer",
                        "example": 123
                    },
                    "user_id": {
                        "type": "string",
                        "example": "1 or Guest"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Logs",
            "description": "Logs"
        },
        {
            "name": "System",
            "description": "System"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}